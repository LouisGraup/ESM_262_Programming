{
  "articles": [
    {
      "path": "assignments.html",
      "title": "Assignments",
      "author": [],
      "contents": "\n\nContents\nAssignment materials and dates\nAssignment expectations and grading\n\n\n\nTO UPDATE THIS PAGE: Open and edit the assignments.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nAssignment materials and dates\nAssignment materials\nAssigned\nDue date\nA link to the repo\n2021-01-01\n2021-01-08\nA link to the repo\n2021-01-15\n2021-01-23\nA link to the repo\n2021-02-01\n2021-02-09\nA link to the repo\n2021-02-14\n2021-02-23\nAssignment expectations and grading\nThis might also go on the home page & in syllabus\nOr could reinforce here\n\n\n\n\n",
      "last_modified": "2023-03-13T07:20:14-07:00"
    },
    {
      "path": "index.html",
      "title": "ESM 262 Computing for Environmental Science",
      "description": "Introduction to computing for data management and analysis for environmental applications. The course provides MESM students with the basic computing and programming skills used in data science.",
      "author": [],
      "contents": "\n\nContents\nWelcome ESM 262\nHow class will work:\n\nCourse description\nTeaching team\nLearning objectives\nCourse requirements\nComputing\n\nCourse materials and how we will work\nAssignments\n\n\n\n\nFigure 1: Growing skills\n\n\n\nWelcome ESM 262\nHow class will work:\nBefore each class, I will give you an Rmarkdown document to review,\nIn class I will provide some lecture materials, and we will briefly go through the Rmarkdown document, I’ll answer questions and add some additional comments, then we will do an in class exercise\nAssignments will usually evolve from this exercise.\nAll materials will be available on this website\nCourse description\nESM 262 is an introduction to computing for environmental applications. The course provides practical training in software design best practices. Topics include programming language concepts; modular program design; data structures and flow control, version control, testing, documentation and reproducibility. The course features R for programming, Git for version control, Markdown for workflow, and GitHub for collaboration and publishing, but many concepts would be applicable in other software design tools.\nClass will include a mix of lectures and hands-on examples, using students’ own computers.\nLectures: MW 9:30 AM - 10:45 AM (Bren Hall 1510)\nTeaching team\nInstructor: Naomi Tague (www.tagueteamlab.org)\nOffice hours: email me\nemail (tague@ucsb.edu)\ngit user id naomitague\nTeaching assistant: Ojas S\nOffice hours: Tuesday / Thursday 3pm-4pm\nemail (ojassarup@ucsb.edu )\ngit user id osarup\nLearning objectives\n3 BIG concepts in programming are modularity, data structure, looping - we will learns skills related to all three of these\nlearn and practice some coding/programming best practices (that will make your data science life easier - whatever you do!)\ndocumentation\ntesting\n\nlearn some new Rskills that are helpful for a wide variety of data science applications\npractice partner coding\nCourse requirements\nComputing\nMake sure you have installed git, R, R-studio\nPlease bring your laptop to class\nMake sure you have a Github account\nCourse materials and how we will work\nAll lecture materials will be available on this course website as well as assignments. (But you will submit assignments on Gauchospace)\nPrior to most classes, I will ask you to study an Rmarkdown document (and often an example R-functions) before class\nThen at the beginning of class, I will briefly go over the document and we will discuss any questions. Occasionally I spend 10-15 minutes lecturing. We will spend most of the class working on practical applications of what was in the document. This way we use the class time as a lab - where you can get guidance.\nthis mean its essential for you to do the review before class \nWhy structure it this way?\nYou learn to code by doing - not so much by watching others do!\nAssignments\nThere will be 6 short assignment (more or less one for each class). You will usually have time to work on the assignment in class and most will be in groups. We’ll evaluate your assignments by pulling the GitHub repository that they live in.\nTo set this up:\nCreate a single private git hub repo to hold all of your assignments (and nothing else!).\nInvite Ojas (’osarup) and Naomi (naomitague`) to collaborate on this repo.\nThen, for each assignment:\nPut your solution, and all the files needed to run it, in its own folder within the repo.\nSubmit the URL of the folder on Gauchospace\n\n\n\n",
      "last_modified": "2023-03-13T07:20:15-07:00"
    },
    {
      "path": "topic_1_resource.html",
      "title": "Course resources - Lecture 1",
      "author": [],
      "contents": "\n\nContents\nAssignment for next class\nR Installation\nGit Help\n\nAssignment for next class\nCreate R project for this course that is linked to git\nReview how Git and Github works if needed (see links below for help)\nCreate two directories - working and assignments\nIn the assignments directory, create an Rmarkdown file\nadd one paragraph that describes why you are taking this course\nadd one paragraph that describes your data science background\n\nCommit change to local and remote github repository\nAdd the link to your remote repository on Gauchospace as submission for Assignment 1a \nMake sure that Naomi and Ojas have access (if it is a private repository, add naomitague and osarup as collaborators)\nIf you run into roadblocks here - come to Ojas’s office hours on Tuesday! (if you can’t let us know and\nwe can try to find another time)\nR Installation\nSo that we all are working with the same code make sure you have a recent version of\nR\nRStudio installed,\nYou will also need the following libraries to get started\n**tidyverse**\n**devtools**\n**purr**\nGit Help\nGitHub\nFrom ESM 206 you already have a GitHub account, but if not\nrequest a GitHub account.\nThere is a lot of information on the web that you can use to refresh / learn to take advantage of Git . This one is pretty much all you need to know for this course\nHappy Git and GitHub for the useR\nIf you need more help with Git let us know and we will set a time for a tutorial :)\n\n\n\n",
      "last_modified": "2023-03-13T07:20:15-07:00"
    },
    {
      "path": "topic_10.html",
      "title": "Topic 10: Inserting tables",
      "author": [],
      "contents": "\n\nContents\nUse the Visual Editor\nOther options\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_10.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nUse the Visual Editor\nIf you want to create a table in your R Markdown from scratch that is easily editable (e.g., a table of Assignment due dates or something), it might be easiest to just make the thing manually right in your R Markdown document.\nTo do that, I strongly recommend using the RStudio Visual Editor (in RStudio versions >= 1.4), which has an easy-to-use Table maker similar to what you’d see in Word or Google Docs.\nOpen the .Rmd in which you want to add the table\nSwitch over to the visual editor by clicking on the compass-looking icon in the top right of your .Rmd screen, to the right of the ‘Run’ and ‘Publish’ buttons (hover text is “Switch to visual markdown editor”)\nIn the Visual Editor menu, click on Table, then in the dropdown Menu click ‘Insert Table’…and create & populate your new table like you would normally in non-markdown tools\nOther options\nThere are a bunch of different ways to add & format tables in R Markdown (see several of many options in David Keyes’ post on Making Beautiful Tables in R). I think most of them are most useful when you’re trying to make a finalized table with data in it, but if you really want to beautify your website tables there are options.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:16-07:00"
    },
    {
      "path": "topic_2_resource.html",
      "title": "Course resources - Lecture 2",
      "author": [],
      "contents": "\n\nContents\nAssignment 2 - To Submit\nReview for class\n\nAssignment 2 - To Submit\nWith your group, think of an example program that you might want to design that is complex enough to involve several modules\nwrite a contract for the overall program (input, output, parameters)\nbreak the program in to modules (naming them appropriately), wrate a contract for each one\ncreate a diagram that shows how these modules would be put together to go from inputs to output for the overall program (you can use whatever tools you like to create this)\nsummarize this in an Rmarkdown document\nselect a group member and use their group repository\nAdd the link to your remote repository and name of this Rmarkdown file on Gauchospace as GROUP submission for Assignment 1b \nReview for class\nReview starting_functions.Rmd\nTo access this file, go to the following github repo\nExample/Review Repo\nfind and go through Rmarkdown/starting_functions.Rmd BEFORE next class - play with it; come ready to ask questions in class\nyou can either clone this repository or just download the file - it is in rhe Rmarkdown directory\ncloning will make it easier for you to get future files (by pulling) but…\nif you clone make sure this is in a completely separate directory from your assignments directory (git doesn’t like two different repos in the same place!)\n\nNext class we will use this to learn how to make a function in R\n\n\n\n",
      "last_modified": "2023-03-13T07:20:16-07:00"
    },
    {
      "path": "topic_2.html",
      "title": "Topic 2: Update site title and subtitle",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_2.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nOne of the first things you’ll want to do is update your site title, subtitle, and the short link on the right side of the navbar.\nHere’s how:\nThe main title and subtitle for the home page live in the YAML of the index.Rmd file. Open it in your project, update the title and description fields in the YAML, save, then build your site (In RStudio: Build > Build Website) to see the updated title.\nThe label for the short link in the upper right of the page (right side of the navigation bar) is specified in the _site.yml page. Open the _site.yml file in your project, update the Title field, save, and rebuild the site to see your update.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:17-07:00"
    },
    {
      "path": "topic_3_resource.html",
      "title": "Before next class",
      "author": [],
      "contents": "\n\nContents\n PART 1: Finish writing a function from class \n PART 2: Review Two Rmarkdowns \n\n PART 1: Finish writing a function from class \nOne of the equations used to compute automobile fuel efficiency is as follows this is the power required to keep a car moving at a given speed is as follows:\n\\(Pb = crolling * m *g *V + \\frac{1}{2} * A*p_{air}*c_{drag}*V^3\\)\nwhere crolling and cdrag are rolling and aerodynamic resistive coefficients, typical values are 0.015 and 0.3, respectively.\nV: is vehicle speed (assuming no headwind) in m/s (or mps) m: is vehicle mass in kg\nA is surface area of car \\((m^2)\\)\ng: is acceleration due to gravity \\((9.8 m/s^2 )\\)\np_air = density of air \\((1.2kg/m^3 )\\)\nPb is power in Watts\nWrite a function to compute power, given a truck of m=31752 kg (parameters for a heavy truck) for a range of different highway speeds, The surface area of this truck is 16 \\(m^2\\)\n30 m/s\n80 km/hr\n120 km/hr\n40 km/hr\n5 km/hr\nPlot power as a function of speed\nRecompute for a lighter vehicle (15,000 kg)\nAdd a second line to your graph for lighter vehicle\nKeep your function in its own file, store it in a subdirectory called R and then create a separate Rmarkdown document to use the function and store the Rmarkdown in a different directory\nYou don’t need to hand in anything - but you need to complete this exercise before next class because\nwe will build on these skills\n PART 2: Review Two Rmarkdowns \nBefore next class, review these two Rmarkdowns in\nhttps://github.com/naomitague/ESM_262_Examples\nIf you’ve already cloned this, you will find them in the Rmarkdown subdirectory\nSampling_example.Rmd\nError_checking.Rmd\n\n\n\n",
      "last_modified": "2023-03-13T07:20:17-07:00"
    },
    {
      "path": "topic_3.html",
      "title": "Topic 3: Adding images",
      "author": [],
      "contents": "\n\nContents\nWhere should I save my images?\nHow do I make images show up on my site?\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_3.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nWhere should I save my images?\nDrop images you want to include on your site into the existing img folder within your R Project (or make your own folder for images, set up a subfolder structure, etc.) - as long as you can easily point to them within your project.\nHow do I make images show up on my site?\nThere are a bunch of ways to add images in an R Markdown document (see more examples from the R Markdown Cookbook here).\nI recommend using knitr::include_graphics(\"path_to_image\").\nFor example, if there is an image saved as cool_dogs.jpg in the img folder, then you can add this to your R Markdown document by adding (within a code chunk):\n\n```{r, echo = FALSE}\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\nYou can also update the size of the image, add a caption, etc. by updating the code chunk header, e.g.:\n\n```{r, echo = FALSE, out.width = \"50%\", fig.cap = \"Some cool dogs!\"}\n  knitr::include_graphics(\"img/cool_dogs.jpg\")\n```\nFor example, the image usgs_sat.jpeg is in the img folder of this template. I can have it show up here by include a code chunk that looks like this:\n\n```{r, echo = FALSE, out.width = \"80%\", fig.cap = \"USGS image of Mississippi River.\"}\n  knitr::include_graphics(\"img/usgs_sat.jpeg\")\n```\nWhich creates:\n\n\n\nFigure 1: USGS image of Mississippi River.\n\n\n\n\n\n\n",
      "last_modified": "2023-03-13T07:20:18-07:00"
    },
    {
      "path": "topic_4_resource.html",
      "title": "Nothing to turn in",
      "author": [],
      "contents": "\n\nContents\nReview for next class\n\nReview for next class\nlooping.Rmd\n\n\n\n",
      "last_modified": "2023-03-13T07:20:18-07:00"
    },
    {
      "path": "topic_4.html",
      "title": "Topic 4: Change the theme",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_4.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nThe bells and whistles of this MEDS template (colors, fonts, spacing, etc.) are customized in the theme.css file in your Project root.\nIf you love css or want to make changes, you’re encouraged to customize your site! There is minor annotation in the css file, but honestly this will probably just take quite a bit of Inspect Element to figure out what to change.\nFonts: If you specifically want to know how to change the site fonts, see here.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:18-07:00"
    },
    {
      "path": "topic_5_resource.html",
      "title": "Assignment 3",
      "author": [],
      "contents": "\n\nContents\nAssignment 3\nTo Review for next class\n\nAssignment 3\nFor this assignment you will write a new Rmarkdown document based on the analysis of power required for different possible_cars from looping.RMD; You will\nAdd an additional super light car with mass 5,000 kg and a surface area 10m2\nCompute the mean and maximum power for Cars A, B, C and for your new car, assuming that average highway speed is 80 km/hr with a standard deviation of 10km/hr; Use 2 different methods to compute the mean and maximum power for each car type; a) FOR loop and b) the pmap function from purr\nCreate two boxplots (one for each method (FOR and pmap)) that show the range of power consumption (across sampled speeds) for each car type.\nPut the Rmarkdown in your assignment github and submit a link on Gauchospace for Assignment 3 when its ready to be graded\nGrading Rubric\nCorrect R code for adding the super light car (5pts)\nValues for mean and maximum power for all 4 cars are in expected ranges (remember you are sampling so values will differ slightly) (5pts)\nUsed both methods (FOR and pmap) correctly (4pts)\nBoxplots (6pts)\ncorrectly show range of power consumption for each car type for the two methdos\ngood presentation (e.g axis labels, colors)\nGood coding practice (e.g Adequate documentation throughout) (5pts)\nTotal out of 25pts\nTo Review for next class\nDataTypes.Rmd\n\n\n\n",
      "last_modified": "2023-03-13T07:20:19-07:00"
    },
    {
      "path": "topic_5.html",
      "title": "Topic 5: Basic formatting",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_5.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIf you’re familiar with markdown, use standard syntax to update font styles, add bulleted lists, subscripts/superscripts, etc. (or learn more from the R Markdown cheatsheet).\nIf you’re not familiar with markdown and want an easier way to update formatting, there is a Visual Editor in RStudio versions > 1.4. It is absolutely worth it to check it out for easier formatting of text, images, tables, citations, and more. Read more about the new RStudio Visual Editor here.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:19-07:00"
    },
    {
      "path": "topic_6_resource.html",
      "title": "Assignment 5",
      "author": [],
      "contents": "\n\nContents\nAssignment\n\nAssignment\nWrite a function that takes a vector of fish names and always returns three items\nthe most common fish,\nthe rarest fish\nthe total number of fish\nCreate an Rmarkdown to demonstrate the use of your function with fish.txt - which\nis under Data on ESM_262_Examples\n[Data on ESM_262_Examples]{https://github.com/naomitague/ESM_262_Examples/blob/main/Data/fish.txt}\nTurn in on Gauchospace what your function returns when you run with fish.txt!\nChallenge: What if we had multiple catches - how would you run your summary function for all of those catches - see below for an example to generate multiple catches\nYou don’t have to run this one in but we will go over in class\n\n\nlibrary(purrr)\n# generate some data if we had 10 different fishing days\n# some examples of using the purr family of functions\n\npossible.fish = c(\"salmon\",\"steelhead\",\"shark\",\"tuna\",\"cod\")\n\n# lets generate random sample of the number of fish caught on each day\nndays=10\ncatches = round(runif(min=3, max=400, n=ndays))\n\n# now for each fishing day (and its number of fish caught) - use sample to genreate the fish\ncatches_res = list(catches) %>% pmap(sample, x=possible.fish, replace=TRUE)\n# look at the sample catches\ncatches_res[[1]]\n\n [1] \"cod\"       \"tuna\"      \"steelhead\" \"tuna\"      \"tuna\"     \n [6] \"tuna\"      \"shark\"     \"tuna\"      \"tuna\"      \"tuna\"     \n[11] \"salmon\"    \"tuna\"      \"shark\"     \"shark\"     \"cod\"      \n[16] \"salmon\"    \"cod\"       \"shark\"     \"cod\"       \"shark\"    \n[21] \"cod\"       \"steelhead\" \"steelhead\" \"cod\"       \"salmon\"   \n[26] \"shark\"    \n\ncatches_res[[10]]\n\n  [1] \"shark\"     \"cod\"       \"cod\"       \"cod\"       \"shark\"    \n  [6] \"shark\"     \"steelhead\" \"cod\"       \"salmon\"    \"tuna\"     \n [11] \"cod\"       \"steelhead\" \"tuna\"      \"tuna\"      \"steelhead\"\n [16] \"cod\"       \"shark\"     \"steelhead\" \"cod\"       \"salmon\"   \n [21] \"tuna\"      \"tuna\"      \"steelhead\" \"salmon\"    \"tuna\"     \n [26] \"tuna\"      \"cod\"       \"salmon\"    \"tuna\"      \"shark\"    \n [31] \"cod\"       \"cod\"       \"cod\"       \"shark\"     \"tuna\"     \n [36] \"shark\"     \"shark\"     \"tuna\"      \"tuna\"      \"steelhead\"\n [41] \"salmon\"    \"cod\"       \"shark\"     \"tuna\"      \"salmon\"   \n [46] \"tuna\"      \"cod\"       \"steelhead\" \"shark\"     \"tuna\"     \n [51] \"cod\"       \"tuna\"      \"cod\"       \"tuna\"      \"salmon\"   \n [56] \"tuna\"      \"tuna\"      \"cod\"       \"shark\"     \"steelhead\"\n [61] \"shark\"     \"salmon\"    \"steelhead\" \"cod\"       \"salmon\"   \n [66] \"cod\"       \"salmon\"    \"salmon\"    \"shark\"     \"shark\"    \n [71] \"tuna\"      \"steelhead\" \"tuna\"      \"salmon\"    \"cod\"      \n [76] \"cod\"       \"tuna\"      \"shark\"     \"cod\"       \"tuna\"     \n [81] \"salmon\"    \"steelhead\" \"cod\"       \"tuna\"      \"steelhead\"\n [86] \"cod\"       \"salmon\"    \"shark\"     \"salmon\"    \"shark\"    \n [91] \"steelhead\" \"cod\"       \"tuna\"      \"steelhead\" \"tuna\"     \n [96] \"tuna\"      \"tuna\"      \"cod\"       \"tuna\"      \"shark\"    \n[101] \"shark\"     \"tuna\"      \"shark\"     \"cod\"       \"tuna\"     \n[106] \"steelhead\" \"salmon\"    \"tuna\"      \"salmon\"    \"salmon\"   \n[111] \"tuna\"      \"steelhead\" \"steelhead\" \"steelhead\" \"tuna\"     \n[116] \"salmon\"    \"steelhead\" \"cod\"       \"shark\"     \"shark\"    \n[121] \"cod\"       \"shark\"     \"steelhead\" \"salmon\"    \"tuna\"     \n[126] \"shark\"     \"shark\"     \"steelhead\" \"tuna\"      \"shark\"    \n[131] \"salmon\"    \"tuna\"      \"steelhead\" \"salmon\"    \"shark\"    \n[136] \"shark\"     \"tuna\"      \"cod\"       \"steelhead\" \"steelhead\"\n[141] \"salmon\"    \"steelhead\" \"tuna\"      \"steelhead\" \"tuna\"     \n[146] \"shark\"     \"steelhead\" \"cod\"       \"tuna\"      \"shark\"    \n[151] \"steelhead\" \"cod\"       \"salmon\"    \"cod\"       \"cod\"      \n[156] \"salmon\"    \"cod\"       \"salmon\"    \"steelhead\" \"salmon\"   \n[161] \"tuna\"      \"steelhead\" \"salmon\"    \"salmon\"    \"steelhead\"\n[166] \"cod\"       \"steelhead\" \"shark\"     \"steelhead\" \"cod\"      \n[171] \"tuna\"      \"shark\"     \"cod\"       \"salmon\"    \"steelhead\"\n[176] \"salmon\"    \"salmon\"    \"salmon\"    \"steelhead\" \"tuna\"     \n[181] \"salmon\"    \"tuna\"      \"tuna\"      \"steelhead\" \"salmon\"   \n[186] \"steelhead\" \"shark\"     \"shark\"     \"tuna\"      \"tuna\"     \n[191] \"cod\"       \"salmon\"    \"salmon\"    \"shark\"     \"tuna\"     \n[196] \"steelhead\" \"tuna\"      \"shark\"     \"cod\"       \"cod\"      \n[201] \"steelhead\" \"steelhead\" \"tuna\"      \"salmon\"    \"salmon\"   \n[206] \"tuna\"      \"shark\"     \"shark\"     \"shark\"     \"salmon\"   \n[211] \"salmon\"    \"salmon\"    \"steelhead\" \"cod\"       \"steelhead\"\n[216] \"salmon\"    \"cod\"       \"steelhead\" \"salmon\"    \"salmon\"   \n[221] \"tuna\"      \"tuna\"      \"salmon\"    \"salmon\"    \"tuna\"     \n[226] \"tuna\"      \"steelhead\" \"cod\"       \"salmon\"    \"shark\"    \n[231] \"cod\"       \"shark\"     \"shark\"     \"cod\"       \"steelhead\"\n[236] \"shark\"     \"shark\"     \"steelhead\" \"cod\"       \"tuna\"     \n[241] \"steelhead\" \"cod\"       \"salmon\"    \"shark\"     \"salmon\"   \n[246] \"salmon\"    \"cod\"       \"cod\"       \"shark\"     \"shark\"    \n[251] \"cod\"       \"cod\"       \"cod\"       \"salmon\"    \"cod\"      \n[256] \"shark\"     \"salmon\"    \"shark\"    \n\n# ok so how do we get the summary (rarest fish, number of fish for all catches in catch_res)?\n\n\n\n\n\n",
      "last_modified": "2023-03-13T07:20:23-07:00"
    },
    {
      "path": "topic_6.html",
      "title": "Topic 6: Internal & external links",
      "author": [],
      "contents": "\n\nContents\nLinking to internal parts of your site\nExternal links\n\n\nTO UPDATE THIS PAGE: Open and edit the topic_6.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nLinking to internal parts of your site\nSometimes you’ll want to have a link to another page in your website. How? Use the format [text](link_to_this_page.html).\nFor example, if I want to link here to the Resources page, within my .Rmd that looks like this:\n  Find more resources [here](resources.html). \nWhich, when built, looks like this:\nFind more resources here.\nExternal links\nSame thing, just add the full URL within the parentheses. For example, to link to UCSB’s home page that would look like:\n  Learn more about [UCSB](https://www.ucsb.edu/).\n  \nWhich when built looks like this:\nLearn more about UCSB.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:23-07:00"
    },
    {
      "path": "topic_7_resource.html",
      "title": "Assignment 7",
      "author": [],
      "contents": "\n\nContents\nAssignment -on your own\n\nAssignment -on your own\nWrite a function that takes a vector of fish names and always returns three items\nthe most common fish,\nthe rarest fish\nthe total number of fish\nCreate an Rmarkdown to demonstrate the use of your function with fish.txt - which\nis under Data on ESM_262_Examples\n[Data on ESM_262_Examples]{https://github.com/naomitague/ESM_262_Examples/blob/main/Data/fish.txt}\nTurn in on Gauchospace what your function returns when you run with fish.txt!\nChallenge: What if we had multiple catches - how would you run your summary function for all of those catches - see below for an example to generate multiple catches\nYou don’t have to run this one in but we will go over in class\n\n\n# generate some data if we had 10 different fishing days\n# some examples of using the purr family of functions\nlibrary(tidyverse)\npossible.fish = c(\"salmon\",\"steelhead\",\"shark\",\"tuna\",\"cod\")\n\nsource(\"R/fish_summary.R\")\n# lets generate random sample of the number of fish caught on each day\nndays=10\ncatches = round(runif(min=3, max=400, n=ndays))\n\n# now for each fishing day (and its number of fish caught) - use sample to genreate the fish\ncatches_res = list(catches) %>% pmap(sample, x=possible.fish, replace=TRUE)\n# look at the sample catches\ncatches_res[[1]]\n\n[1] \"salmon\"    \"tuna\"      \"steelhead\" \"salmon\"    \"steelhead\"\n\ncatches_res[[10]]\n\n  [1] \"tuna\"      \"steelhead\" \"tuna\"      \"tuna\"      \"shark\"    \n  [6] \"salmon\"    \"salmon\"    \"tuna\"      \"cod\"       \"steelhead\"\n [11] \"shark\"     \"salmon\"    \"tuna\"      \"shark\"     \"tuna\"     \n [16] \"steelhead\" \"shark\"     \"shark\"     \"cod\"       \"salmon\"   \n [21] \"cod\"       \"tuna\"      \"shark\"     \"salmon\"    \"shark\"    \n [26] \"steelhead\" \"steelhead\" \"salmon\"    \"salmon\"    \"shark\"    \n [31] \"cod\"       \"cod\"       \"tuna\"      \"steelhead\" \"cod\"      \n [36] \"cod\"       \"salmon\"    \"cod\"       \"tuna\"      \"cod\"      \n [41] \"steelhead\" \"cod\"       \"steelhead\" \"steelhead\" \"cod\"      \n [46] \"steelhead\" \"cod\"       \"shark\"     \"steelhead\" \"steelhead\"\n [51] \"shark\"     \"shark\"     \"tuna\"      \"cod\"       \"cod\"      \n [56] \"cod\"       \"salmon\"    \"salmon\"    \"cod\"       \"cod\"      \n [61] \"shark\"     \"steelhead\" \"shark\"     \"steelhead\" \"shark\"    \n [66] \"cod\"       \"tuna\"      \"cod\"       \"shark\"     \"shark\"    \n [71] \"steelhead\" \"salmon\"    \"shark\"     \"tuna\"      \"salmon\"   \n [76] \"steelhead\" \"salmon\"    \"steelhead\" \"cod\"       \"steelhead\"\n [81] \"salmon\"    \"tuna\"      \"salmon\"    \"shark\"     \"steelhead\"\n [86] \"shark\"     \"cod\"       \"salmon\"    \"steelhead\" \"steelhead\"\n [91] \"steelhead\" \"tuna\"      \"cod\"       \"tuna\"      \"shark\"    \n [96] \"steelhead\" \"steelhead\" \"salmon\"    \"steelhead\" \"salmon\"   \n[101] \"salmon\"    \"salmon\"    \"cod\"       \"cod\"       \"salmon\"   \n[106] \"tuna\"     \n\n# ok so how do we get the summary (rarest fish, number of fish for all catches in catch_res)?\nfish_summary(catches_res[[1]])\n\n$mostcommon\n[1] \"salmon\"\n\n$rarest\n[1] \"tuna\"\n\n$nfish\n[1] 5\n\nres = catches_res %>% map_df(fish_summary)\nres\n\n# A tibble: 10 × 3\n   mostcommon rarest    nfish\n   <chr>      <chr>     <int>\n 1 salmon     tuna          5\n 2 shark      tuna         24\n 3 salmon     cod          48\n 4 salmon     cod          12\n 5 tuna       shark       368\n 6 salmon     steelhead   304\n 7 steelhead  tuna        164\n 8 tuna       salmon       69\n 9 cod        shark       334\n10 steelhead  tuna        106\n\nAlso review the classify_lake.R function from today’s lecture to make sure you understand\n\n\n\n",
      "last_modified": "2023-03-13T07:20:25-07:00"
    },
    {
      "path": "topic_7.html",
      "title": "Topic 7: Remove tables of contents",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_7.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIn this template, you’ll notice that a Table of Contents is automatically created on pages with headings (starting with Level 2 headers as top-level items).\nTo remove the auto-table of contents, open the _site.yml file. In the output section, change the toc: and toc_float: fields to false.\nThat section in _site.yml would then look like this, and the table of contents won’t appear:\noutput:\n  distill::distill_article:\n    toc: false\n    toc_float: false\n\n\n\n",
      "last_modified": "2023-03-13T07:20:25-07:00"
    },
    {
      "path": "topic_8_resource.html",
      "title": "Assignment ",
      "author": [],
      "contents": "\n\nContents\nAssignment\n\nAssignment\nFor this assignment work in pairs - and submit as a group\nDesign a function - you can pick any subject and you can even make up the equations as long as they conceptually make sense\nMake sure it has at least 2 inputs and 1 parameter (ideally more) and at least 2 outputs\nCode your function in R, save as a R file in subdirectory called R\nMake sure you include documentation (both at the top as we’ve shown in past examples, and inline)\nInclude some error checking\n\nIn an Rmarkdown file, generate some data for 2 of the function inputs\nuse a for loop to run the function for the data\nrepeat the “looping” using something from the “purrr” package\nGraph results (you can decide what the most interesting way to graph - you just need to make one graph)\n\nWrite at least 2 tests for your function; store in a separate test file\nPut this in a git repo that includes an R subdirectory a tests subsdirectory and an Rmarkdown file and submit the link on Gauchospace (or you can put all of this in a new git repo or a subdirectory of an existing git repo)\nSubmit the link to repo (and name of subdirectory if part of a larger git project) as a group with your partner,\nYou will have to fill out the group select on Gauchospace first before you submit\nGrading Rubric\nCreated a function\nat least 2 inputs, 1 parameter and 2 outputs (it can have more) (5pts)\nincludes error checking (5 pts)\n\nRmarkdown that generates test data and runs the function\ndata generation ( 5pts)\nrun function multiple times with a loop (5 pts)\nrun function multiple times with something from purr (pmap) (5pts)\nGraphs results (5 pts)\n\nTest file\na file with two tests (10pts)\n\nGood programming practices (10 pts)\nTotal 50pts\nAlso review spring_summary.R and tests of that function from\nESM_262_Examples\n\n\n\n",
      "last_modified": "2023-03-13T07:20:25-07:00"
    },
    {
      "path": "topic_8.html",
      "title": "Topic 8: Dropdown list from a navigation bar item",
      "author": [],
      "contents": "\n\nTO UPDATE THIS PAGE: Open and edit the topic_8.Rmd file, in the project root, to delete this placeholder text and customize with your own!\n\nIf you look at this template, you’ll notice that some navigation bar items go directly to a single page, while the Modules item takes you to a dropdown menu.\nTo create a dropdown menu of pages:\nCreate and save the pages as individual R Markdown documents as described here.\nOpen the _site.yml file. In the navbar section, create a menu with the pages as linked items using a structure like this:\n   - text: \"Dropdown menu\"\n      menu:\n        - text: \"First dropdown item\"\n          href: item_1.html\n        - text: \"Second dropdown item\"\n          href: item_2.html\nThe example above would only work if the new pages were created as item_1.Rmd and item_2.Rmd, so that when the site is built the rendered item_1.html and item_2.html files exist in the docs output directory.\n\n\n\n",
      "last_modified": "2023-03-13T07:20:26-07:00"
    },
    {
      "path": "topic_9.html",
      "title": "Topic 9: Creating Packages",
      "author": [],
      "contents": "\nCreate a package with at least one function\nInclude documentation in that function and generate a help page\n\n\n\n",
      "last_modified": "2023-03-13T07:20:26-07:00"
    }
  ],
  "collections": []
}
